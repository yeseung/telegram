import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.gongdaeoppa.firebasechat.util.Util;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

@Service
@RequiredArgsConstructor
public class TelegramService {
    
    
    private static String TOKEN = "";
    
    public boolean sendTelegram(String chatId, String text) {
        
        Map<String, Object> map = new HashMap<>();
        
        StringBuilder response = new StringBuilder();
        try {
            URL url = new URL("https://api.telegram.org/bot" + TOKEN + "/sendMessage?chat_id=" + chatId + "&text=" + Util.getUrlEncoded(text));
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json; charset=utf-8");
            
            connection.getLastModified();
            connection.setConnectTimeout(10000);
            connection.setReadTimeout(10000);
            
            BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            map = new ObjectMapper().readValue(response.toString(), new TypeReference<Map<String, Object>>(){});
            System.out.println("response = " + map);
            
            reader.close();
            connection.disconnect();
            
            return true;
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return false;
    }
    
    
}
